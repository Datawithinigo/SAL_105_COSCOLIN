---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---

<Layout title="Carrito de compra - Horno Coscolin">
  <Header />
  
  <main>
    <section class="carrito-section">
      <div class="container">
        <h1>Tu carrito</h1>
        
        <div id="carrito-vacio" class="hidden">
          <p>Tu carrito está vacío. <a href="/#destacados">Añade algunos productos</a> para continuar.</p>
        </div>
        
        <div id="carrito-contenido">
          <div class="carrito-items">
            <!-- Items will be added here dynamically -->
          </div>
          
          <div class="carrito-resumen">
            <h2>Resumen del pedido</h2>
            <div class="resumen-item">
              <span>Subtotal:</span>
              <span id="subtotal">0.00€</span>
            </div>
            <div class="resumen-item">
              <span>Gastos de envío:</span>
              <span id="envio">3.50€</span>
            </div>
            <div class="resumen-item total">
              <span>Total:</span>
              <span id="total">0.00€</span>
            </div>
            
            <div class="fecha-entrega">
              <h3>Fecha de entrega</h3>
              <p>Selecciona cuándo quieres recibir tu pedido:</p>
              <input type="date" id="fecha-entrega" min="" required>
              <select id="hora-entrega" required>
                <option value="">Selecciona una hora</option>
                <option value="10:00-12:00">10:00 - 12:00</option>
                <option value="12:00-14:00">12:00 - 14:00</option>
                <option value="14:00-16:00">14:00 - 16:00</option>
                <option value="16:00-18:00">16:00 - 18:00</option>
                <option value="18:00-20:00">18:00 - 20:00</option>
              </select>
              <p class="fecha-info">Entregamos de lunes a sábado, de 10:00 a 20:00</p>
            </div>
            
            <div class="direccion-entrega">
              <h3>Dirección de entrega</h3>
              <input type="text" id="direccion" placeholder="Calle, número, piso..." required>
              <div class="direccion-row">
                <input type="text" id="codigo-postal" placeholder="Código postal" required>
                <input type="text" id="ciudad" placeholder="Ciudad" required>
              </div>
              <input type="tel" id="telefono-contacto" placeholder="Teléfono de contacto" required>
            </div>
            
            <button id="btn-finalizar" class="btn btn-full">Finalizar pedido</button>
            <a href="/" class="btn-link">Seguir comprando</a>
          </div>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</Layout>

<style>
  .carrito-section {
    padding: 5rem 0;
    min-height: 60vh;
  }
  
  h1 {
    font-size: 2.5rem;
    color: var(--primary);
    margin-bottom: 2rem;
  }
  
  .hidden {
    display: none;
  }
  
  #carrito-vacio p {
    font-size: 1.2rem;
    text-align: center;
    margin: 3rem 0;
  }
  
  #carrito-vacio a {
    color: var(--primary);
    text-decoration: underline;
  }
  
  #carrito-contenido {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 2rem;
  }
  
  .carrito-items {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    align-self: start;
  }
  
  .carrito-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
    border-bottom: 1px solid #eee;
    position: relative;
  }
  
  .carrito-item:last-child {
    border-bottom: none;
  }
  
  .item-info {
    flex: 1;
  }
  
  .item-info h3 {
    font-size: 1.2rem;
    margin-bottom: 0.5rem;
    color: var(--primary);
  }
  
  .item-details {
    display: flex;
    align-items: center;
    gap: 1.5rem;
  }
  
  .item-precio, .item-total {
    font-weight: 700;
    white-space: nowrap;
  }
  
  .item-precio {
    color: var(--secondary);
  }
  
  .item-total {
    color: var(--primary);
    min-width: 90px;
    text-align: right;
  }
  
  .item-cantidad {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background-color: #f5f5f5;
    border-radius: 4px;
    padding: 0.25rem;
  }
  
  .btn-cantidad {
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white;
    border: 1px solid #ddd;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    transition: all 0.2s ease;
  }
  
  .btn-cantidad:hover {
    background-color: var(--primary);
    color: white;
    border-color: var(--primary);
  }
  
  .cantidad-valor {
    width: 30px;
    text-align: center;
    font-weight: bold;
  }
  
  .btn-eliminar {
    color: #999;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1.2rem;
    transition: color 0.3s ease;
    margin-left: 1rem;
  }
  
  .btn-eliminar:hover {
    color: #ff0000;
  }
  
  .carrito-resumen {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    align-self: start;
    position: sticky;
    top: 100px;
  }
  
  .carrito-resumen h2 {
    font-size: 1.5rem;
    color: var(--primary);
    margin-bottom: 1.5rem;
  }
  
  .resumen-item {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1rem;
  }
  
  .total {
    font-size: 1.2rem;
    font-weight: 700;
    border-top: 1px solid #eee;
    padding-top: 1rem;
    margin-top: 1rem;
  }
  
  .fecha-entrega, .direccion-entrega {
    margin: 1.5rem 0;
  }
  
  .fecha-entrega h3, .direccion-entrega h3 {
    font-size: 1.2rem;
    color: var(--primary);
    margin-bottom: 0.5rem;
  }
  
  .fecha-entrega p {
    margin-bottom: 1rem;
  }
  
  .fecha-info {
    font-size: 0.9rem;
    color: #666;
    margin-top: 0.5rem;
  }
  
  #fecha-entrega, #hora-entrega, #direccion, #codigo-postal, #ciudad, #telefono-contacto {
    width: 100%;
    padding: 0.8rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-family: inherit;
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }
  
  .direccion-row {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 0.5rem;
  }
  
  .btn-full {
    width: 100%;
    margin-bottom: 1rem;
  }
  
  .btn-link {
    display: block;
    text-align: center;
    color: var(--primary);
    text-decoration: underline;
  }
  
  @media (max-width: 768px) {
    #carrito-contenido {
      grid-template-columns: 1fr;
    }
    
    .carrito-resumen {
      position: static;
    }
    
    .direccion-row {
      grid-template-columns: 1fr;
    }
    
    .carrito-item {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }
    
    .item-details {
      width: 100%;
      justify-content: space-between;
    }
    
    .btn-eliminar {
      position: absolute;
      top: 1rem;
      right: 0;
      margin-left: 0;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Get cart from localStorage
    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    
    // Set minimum date for delivery to tomorrow
    const fechaEntrega = document.getElementById('fecha-entrega');
    if (fechaEntrega) {
      const tomorrow = new Date();
      tomorrow.setDate(tomorrow.getDate() + 1);
      fechaEntrega.min = tomorrow.toISOString().split('T')[0];
      
      // Set default value to tomorrow
      fechaEntrega.value = tomorrow.toISOString().split('T')[0];
    }
    
    // Render cart
    renderCart();
    
    // Add event listener to finalize order button
    const btnFinalizar = document.getElementById('btn-finalizar');
    if (btnFinalizar) {
      btnFinalizar.addEventListener('click', finalizarPedido);
    }
    
    function renderCart() {
      const carritoVacio = document.getElementById('carrito-vacio');
      const carritoContenido = document.getElementById('carrito-contenido');
      const carritoItems = document.querySelector('.carrito-items');
      
      if (cart.length === 0) {
        carritoVacio.classList.remove('hidden');
        carritoContenido.classList.add('hidden');
        return;
      }
      
      carritoVacio.classList.add('hidden');
      carritoContenido.classList.remove('hidden');
      
      // Clear previous items
      carritoItems.innerHTML = '';
      
      // Add each item to the cart
      cart.forEach(item => {
        const itemElement = document.createElement('div');
        itemElement.className = 'carrito-item';
        
        const itemTotal = item.precio * item.cantidad;
        
        itemElement.innerHTML = `
          <div class="item-info">
            <h3>${item.nombre}</h3>
          </div>
          <div class="item-details">
            <span class="item-precio">${item.precio.toFixed(2)}€</span>
            <div class="item-cantidad">
              <button class="btn-cantidad decrease" data-id="${item.id}">-</button>
              <span class="cantidad-valor">${item.cantidad}</span>
              <button class="btn-cantidad increase" data-id="${item.id}">+</button>
            </div>
            <span class="item-total">${itemTotal.toFixed(2)}€</span>
            <button class="btn-eliminar" data-id="${item.id}" title="Eliminar producto">×</button>
          </div>
        `;
        
        carritoItems.appendChild(itemElement);
      });
      
      // Add event listeners to quantity buttons
      document.querySelectorAll('.btn-cantidad.decrease').forEach(btn => {
        btn.addEventListener('click', () => decreaseQuantity(parseInt(btn.getAttribute('data-id'))));
      });
      
      document.querySelectorAll('.btn-cantidad.increase').forEach(btn => {
        btn.addEventListener('click', () => increaseQuantity(parseInt(btn.getAttribute('data-id'))));
      });
      
      // Add event listeners to remove buttons
      document.querySelectorAll('.btn-eliminar').forEach(btn => {
        btn.addEventListener('click', () => removeItem(parseInt(btn.getAttribute('data-id'))));
      });
      
      // Update summary
      updateSummary();
      
      // Update header cart count
      updateHeaderCartCount();
    }
    
    function decreaseQuantity(id) {
      const item = cart.find(item => item.id === id);
      if (item) {
        if (item.cantidad > 1) {
          item.cantidad -= 1;
        } else {
          removeItem(id);
          return;
        }
        
        localStorage.setItem('cart', JSON.stringify(cart));
        renderCart();
      }
    }
    
    function increaseQuantity(id) {
      const item = cart.find(item => item.id === id);
      if (item) {
        item.cantidad += 1;
        localStorage.setItem('cart', JSON.stringify(cart));
        renderCart();
      }
    }
    
    function removeItem(id) {
      cart = cart.filter(item => item.id !== id);
      localStorage.setItem('cart', JSON.stringify(cart));
      renderCart();
    }
    
    function updateSummary() {
      const subtotalElement = document.getElementById('subtotal');
      const totalElement = document.getElementById('total');
      
      const subtotal = cart.reduce((total, item) => total + (item.precio * item.cantidad), 0);
      const envio = subtotal > 0 ? 3.50 : 0;
      const total = subtotal + envio;
      
      if (subtotalElement) subtotalElement.textContent = `${subtotal.toFixed(2)}€`;
      if (totalElement) totalElement.textContent = `${total.toFixed(2)}€`;
    }
    
    function updateHeaderCartCount() {
      const cartCount = document.querySelector('header .cart-count');
      if (cartCount) {
        const totalItems = cart.reduce((total, item) => total + item.cantidad, 0);
        cartCount.textContent = totalItems.toString();
      }
    }
    
    function finalizarPedido() {
      const fechaEntrega = document.getElementById('fecha-entrega').value;
      const horaEntrega = document.getElementById('hora-entrega').value;
      const direccion = document.getElementById('direccion').value;
      const codigoPostal = document.getElementById('codigo-postal').value;
      const ciudad = document.getElementById('ciudad').value;
      const telefono = document.getElementById('telefono-contacto').value;
      
      // Validate form
      if (!fechaEntrega || !horaEntrega || !direccion || !codigoPostal || !ciudad || !telefono) {
        alert('Por favor, completa todos los campos del formulario');
        return;
      }
      
      // Here you would normally send the order to a server
      // For this example, we'll just show a confirmation and clear the cart
      
      const subtotal = cart.reduce((total, item) => total + (item.precio * item.cantidad), 0);
      const envio = 3.50;
      const total = subtotal + envio;
      
      const fechaFormateada = new Date(fechaEntrega).toLocaleDateString('es-ES', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
      
      const pedidoResumen = cart.map(item => 
        `${item.nombre} x ${item.cantidad} = ${(item.precio * item.cantidad).toFixed(2)}€`
      ).join('\n');
      
      alert(`¡Pedido realizado con éxito!\n\nResumen del pedido:\n${pedidoResumen}\n\nSubtotal: ${subtotal.toFixed(2)}€\nEnvío: ${envio.toFixed(2)}€\nTotal: ${total.toFixed(2)}€\n\nEntrega: ${fechaFormateada}, ${horaEntrega}\nDirección: ${direccion}, ${codigoPostal}, ${ciudad}\nTeléfono: ${telefono}\n\nGracias por tu compra en Horno Coscolin.`);
      
      // Clear cart
      localStorage.removeItem('cart');
      
      // Redirect to home page
      window.location.href = '/';
    }
  });
</script>